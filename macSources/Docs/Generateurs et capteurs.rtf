{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green71\blue75;}
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\b\fs28 \cf0 \ul \ulc0 Comment faire un nouveau plugin ?\

\b0\fs24 \ulnone - Ajouter une cible au projet : new target -> Loadable bundle (ou new project "cocoa bundle")\
- Lier cette cible au framework HCFRPlugin\
- Dans les informations sur la cible, indiquer\
	- une d\'e9pendance \'e0 la cible HCFRPlugin.framework si c'est dans le projet de base (onglet General)\
  	- executable = $\{EXECUTABLE_NAME\}\
    	- installation directory=@executable_path/../Plugins\
	- le nom de la classe principale. Cette classe devra descendre de HCFRPlugin (onglet Properties)\
	- l'extension du plugin : wrapper extension = hcfrPlugin\
	- d\'e9placer le fichier plist dans le r\'e9pertoire du plugin (onglet Build, entr\'e9e "Info.plist File")\
- Ajouter le framework HCFRPlugins \'e0 la cible
\b\fs28 \ul \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b0\fs26 \cf0 \ulnone - Ajouter dans la cible ColorHCFR le plugin \'e0 l'\'e9tape "copy plugins" si c'est dans le projet de base\
- Ajouter la d\'e9pendance au nouveau plugin \'e0 la cible ColorHCFR si c'est dans le projet de base\
\
- Cr\'e9er une class d\'e9rivant de HCFRPlugin\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b\fs28 \cf0 \ul \
Le principe des plugins\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b0\fs26 \cf0 \ulnone Un plugin peut fournir au logiciel un g\'e9n\'e9rateur, un capteur, et un nombre illimit\'e9 d'outils.\
Chaque element est fourni sous forme de classes non instanci\'e9es.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b\fs28 \cf0 \ul Les fonctions a red\'e9finir pour la classe HCFRPlugin\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b0\fs26 \cf0 \ulnone Cf les commentaires dans HCFRTool.h\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b\fs28 \cf0 \ul \
Le principe des g\'e9n\'e9rateurs\

\b0\fs24 \ulnone Les g\'e9n\'e9rateurs sont instanci\'e9es \'e0 la voll\'e9e quand c'est n\'e9cessaire, mais ne sont jamais releas\'e9.\
Une fois instanci\'e9s, la fonction activate est appel\'e9e lorsque le g\'e9n\'e9rateur est charg\'e9 dans la configuration (lorsqu'il est selectionn\'e9)\
et la fonction deactivate est appel\'e9e lors que le g\'e9n\'e9rateur est d\'e9charg\'e9 de la configuration (lorsqu'il est d\'e9sellectionn\'e9).\
Lorsqu'il n'est pas charg\'e9 et activ\'e9, le g\'e9n\'e9rateur doit minimiser son occupation de ressources (CPU et m\'e9moire).\
Lorsqu'il est activ\'e9, le g\'e9n\'e9rateur doit \'eatre en mesure de d\'e9marrer des mesures.\
La fonction 
\f1\fs22 \cf2 \CocoaLigature0 startMeasures 
\f0\fs24 \cf0 \CocoaLigature1 sera appel\'e9e lorsque le g\'e9n\'e9rateur sera lanc\'e9, et la fonction close sera appel\'e9e apr\'e8s utilisation (il restera activ\'e9).
\b\fs28 \ul \ulc0 \
\
Les fonctions a red\'e9finir pour les g\'e9n\'e9rateurs\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b0\fs26 \cf0 \ulnone Cf les commentaires dans HCFRGenerator.h\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\fs24 \cf0 \

\b\fs28 \ul Le principe des capteurs\

\b0\fs24 \ulnone Les capteurs sont instanci\'e9es \'e0 la voll\'e9e quand c'est n\'e9cessaire, mais ne sont jamais releas\'e9s.\
Une fois instanci\'e9s, la fonction activate est appel\'e9e lorsque le capteurs est charg\'e9 dans la configuration (lorsqu'il est selectionn\'e9)\
et la fonction deactivate est appel\'e9e lors que le capteurs est d\'e9charg\'e9 de la configuration.\
Lorsqu'il n'est pas charg\'e9, le capteurs doit minimiser son occupation de ressources (CPU et m\'e9moire).\
Lorsqu'il est charg\'e9 et activ\'e9 le capteur doit \'eatre capable de retourner des mesures.
\b\fs28 \ul \

\b0\fs24 \ulnone \

\b\fs28 \ul Les fonctions a red\'e9finir pour les g\'e9n\'e9rateurs\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b0\fs26 \cf0 \ulnone Cf les commentaires dans HCFRSensor.h
\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\b\fs28 \cf0 \ul Gestion des alertes dans les capteurs et les g\'e9n\'e9rateurs\

\b0\fs24 \ulnone L'affichage des alertes dans un g\'e9n\'e9rateur ou un capteur ne peut se faire n'importe comment, pour deux raisons :\
- le code des capteurs et le g\'e9n\'e9rateurs tournent en grande partie dans une thread s\'e9par\'e9e ;\
- les \'e9crans peuvent \'eatre couverts par des fen\'eatre flottantes. Ces fen\'eatre peuvent masquer une alerte, ce qui conduit \'e0 un bloquage de la machine (le logiciel attend la validation d'une alerte innaccessible car couverte par une fen\'eatre).\
\
Pour afficher une alerte, utiliser les fonctions displayAlert:(NSAlert*)alert propos\'e9es par les classes HCFRSensor et HCFRGenerator.\
Ces fonctions bloquent la thread en cours. Elles ne doivent \'eatre utilis\'e9es que dans une thread diff\'e9rente de la thread principale (dans les fonctions d'execution du capteur (currentMeasure) ou du generateur (startMeasure, nextFrame, close). Ce probl\'e8me est simple \'e0 r\'e8gler sous mac os 10.5, mais sous mac os 10.4, il n'est pas possible de tester si on est dans la thread principale.\
\

\b\fs28 \ul Internationalisation\

\b0\fs24 \ulnone Dans les plugins, on ne peut pas utiliser NSLocalizedString(key, comments), car cette macro utilise exclusivement le fichier Localizable.strings de l'application.\
Il faut utiliser HCFRLocalizedStrings, d\'e9fini dans HCFRPlugins/HCFRUtilities.h pour internationnaliser un plugin.\
\

\b\fs28 \ul Le principe des outils\

\b0\fs24 \ulnone Les outils sont des classes d\'e9rivant de HCFRTool.\
Ces classes seront list\'e9es dans le menu "outils" du logiciel, en utilisant le nom fourni par la fonction de classe toolName.\
Les outils seront instanci\'e9s \'e0 la vol\'e9e la premi\'e8re fois qu'ils seront appel\'e9s.\
Lors de l'instanciation, l'outil peut charger les nib n\'e9cessaires \'e0 son fonctionnement, mais ne doit pas instancier tous les \'e9l\'e9ments qui sont n\'e9cessaires \'e0 son fonctionnement.\
Lorsque l'outil doit \'eatre ex\'e9cut\'e9, la fonction startTool est appel\'e9e.\
L'outil doit revenir au repos lorsque sa derni\'e8re fen\'eatre est ferm\'e9e.\
\

\b\fs28 \ul Points d'attention importants\

\b0\fs24 \ulnone Les g\'e9n\'e9rateurs et les capteurs sont instanci\'e9s \'e0 la voll\'e9e lorsque c'est n\'e9cessaire, et d\'e9salou\'e9 lors qu'ils ne sont plus utils.\
Il est important de s'assurer que la fonction dealloc du generateur ou du capteur est bien appel\'e9e lorsque le capteur est d\'e9-selectionn\'e9.\
Si ce n'est pas le cas, c'est que l'objet \'e0 \'e9t\'e9 retenu et non relach\'e9. C'est par exemple le cas si l'objet s'inscrit comme listener sur un autre objet qui a une dur\'e9e de vie supperieur \'e0 la sienne. Dans \'e7e ca, la fonction deactivate peut \'eatre utilis\'e9e pour retirer le status de listener.\
}